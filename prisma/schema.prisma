datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

model Cliente {
  id            Int         @id @default(autoincrement()) @map("ClienteId")
  nombre        String
  telefono      String
  fechaRegistro DateTime
  direcciones   Direccion[]
  ventas        Venta[]

  @@map("Cliente")
}

model Compra {
  id             Int              @id @default(autoincrement()) @map("CompraId")
  empleadoId     Int
  distribuidorId Int
  fecha          DateTime
  monto          Float
  descripcion    String
  empleado       Empleado         @relation(fields: [empleadoId], references: [id])
  distribuidor   Distribuidor     @relation(fields: [distribuidorId], references: [id])
  productos      CompraProducto[]

  @@map("Compra")
}

model CompraProducto {
  compraId   Int
  productoId Int
  cantidad   Int
  compra     Compra   @relation(fields: [compraId], references: [id])
  producto   Producto @relation(fields: [productoId], references: [id])

  @@id([compraId, productoId])
  @@map("CompraProducto")
}

model Direccion {
  id           Int     @id @default(autoincrement()) @map("DireccionId")
  clienteId    Int
  calle1       String
  calle2       String?
  codigoPostal String
  provincia    String
  localidad    String
  detalle      String?
  cliente      Cliente @relation(fields: [clienteId], references: [id])
  envios       Envio[]

  @@map("Direccion")
}

model Distribuidor {
  id      Int      @id @default(autoincrement()) @map("DistribuidorId")
  nombre  String
  compras Compra[]

  @@map("Distribuidor")
}

model Empleado {
  id      Int      @id @default(autoincrement()) @map("EmpleadoId")
  nombre  String
  cargo   String
  compras Compra[]

  @@map("Empleado")
}

model Envio {
  id                       Int               @id @default(autoincrement()) @map("EnvioId")
  ventaId                  Int
  repartidorId             Int
  direccionId              Int
  estado                   Int
  fechaInicio              DateTime
  fechaUltimaActualizacion DateTime
  venta                    Venta             @relation(fields: [ventaId], references: [id])
  repartidor               Repartidor        @relation(fields: [repartidorId], references: [id])
  direccion                Direccion         @relation(fields: [direccionId], references: [id])
  estadoEnvio              EstadoEnvio       @relation(fields: [estado], references: [id])
  repartidoresEnvios       RepartidorEnvio[]

  @@map("Envio")
}

model EstadoEnvio {
  id               Int               @id @map("EstadoId")
  descEstado       String
  envios           Envio[]
  repartidorEnvios RepartidorEnvio[]

  @@map("EstadoEnvio")
}

model EstadoVenta {
  id         Int     @id @map("EstadoId")
  descEstado String
  ventas     Venta[]

  @@map("EstadoVenta")
}

model Producto {
  id       Int              @id @default(autoincrement()) @map("ProductoId")
  nombre   String
  cantidad Int
  medida   Float
  marca    String
  precio   Float
  compras  CompraProducto[]
  ventas   ProductoVenta[]

  @@map("Producto")
}

model ProductoVenta {
  ventaId    Int
  productoId Int
  cantidad   Int
  venta      Venta    @relation(fields: [ventaId], references: [id])
  producto   Producto @relation(fields: [productoId], references: [id])

  @@id([ventaId, productoId])
  @@map("ProductoVenta")
}

model Repartidor {
  id           Int               @id @default(autoincrement()) @map("RepartidorId")
  nombre       String
  telefono     String
  envios       RepartidorEnvio[]
  enviosDirect Envio[]

  @@map("Repartidor")
}

model RepartidorEnvio {
  repartidorId Int
  envioId      Int
  estado       Int
  repartidor   Repartidor  @relation(fields: [repartidorId], references: [id])
  envio        Envio       @relation(fields: [envioId], references: [id])
  estadoEnvio  EstadoEnvio @relation(fields: [estado], references: [id])

  @@id([repartidorId, envioId])
  @@map("RepartidorEnvio")
}

model Venta {
  id                       Int             @id @default(autoincrement()) @map("VentaId")
  clienteId                Int
  estado                   Int
  fechaInicio              DateTime
  fechaUltimaActualizacion DateTime
  cliente                  Cliente         @relation(fields: [clienteId], references: [id])
  estadoVenta              EstadoVenta     @relation(fields: [estado], references: [id])
  productos                ProductoVenta[]
  envios                   Envio[]

  @@map("Venta")
}

enum TipoEntidad {
  Permiso
  Rol
}

model Entidad {
  id             Int              @id @default(autoincrement())
  nombre         String
  tipo           TipoEntidad
  entidadUsuario EntidadUsuario[]
  permisos       Entidad[]        @relation("PermisoRol")
  roles          Entidad[]        @relation("PermisoRol")

  @@map("Entidad")
}

model EntidadUsuario {
  usuarioId Int
  entidadId Int
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  entidad   Entidad @relation(fields: [entidadId], references: [id])

  @@id([usuarioId, entidadId])
  @@map("EntidadUsuario")
}

model Usuario {
  id         Int              @id @default(autoincrement()) @map("UsuarioId")
  nombre     String           @db.VarChar(256)
  email      String           @db.VarChar(100)
  clave      String           @db.VarChar(256)
  habilitado Boolean
  permisos   EntidadUsuario[]

  @@map("Usuario")
}
